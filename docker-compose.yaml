services:
  db-auth:
    image: postgres:16-alpine
    container_name: db-auth
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: autenticacao_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data/auth:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${DB_USERNAME} -d $${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - hospital_network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    # CORREÇÃO: Kafka depende de Zookeeper, e não o contrário
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - hospital_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: meu-hospital-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - hospital_network


#  ms-autenticacao:
#    # build:
#    #   context: .
#    #   dockerfile: ./ms-autenticacao/Dockerfile
#    container_name: ms-autenticacao
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db-auth:5432/${DB_NAME}
#      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
#      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
#
#      APP_JWT_SECRET: ${JWT_SECRET}
#      APP_JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}
#    depends_on:
#      db-auth:
#        condition: service_healthy
#    restart: on-failure
#    networks:
#      - hospital_network

networks:
  hospital_network:
    driver: bridge